/* {{{ globals */
var game;
var debug; // set to true to debug events
var socket;
var mainDiv = document.getElementById('game');
var waitDiv = document.getElementById('wait');
var alertedDiv = document.getElementById('alerted');
/* }}} */

mainDiv.hidden = true;

function initElm() {
  if (debug) {
    return Elm.debugFullscreen(Elm.Main, "Main.elm");
  } else {
    return Elm.embed(Elm.Main, mainDiv, { downstream : "" });
  }
}

/* {{{ Errors */
function alerted(data, fatal) {
  console.log(data);
  alertedDiv.innerHTML = data;
  if (!fatal && alertedDiv.hidden)
    setTimeout(function(){ alertedDiv.hidden = true; }, 8000);
  alertedDiv.hidden = false;
}
window.onerror = function(msg, file, lineNr) {
  alerted("FATAL ERROR: " + msg + file + lineNr + " please report this.", true);
  game.destroy();
  return false;
}
/* }}} */

function setIdentity(nick, ident, token) {
  localStorage.setItem("nick", nick);
  localStorage.setItem("ident", ident);
  localStorage.setItem("token", token);
}

function startGame(doJoin) {
  socket = new WebSocket("ws://84.248.82.156:8001");

  socket.onopen = function () {
    waitDiv.hidden = true;
    mainDiv.hidden = false;
    game = initElm();
    game.ports.upstream.subscribe(function(e) {
      var d = JSON.parse(e);
      if (debug) console.log("out", d);
      if (d.type !== "noop") socket.send(e);
    });
    socket.send(JSON.stringify(doJoin));
  }

  socket.onclose = function () {
    game.dispose();
    mainDiv.hidden = true;
    alerted("Connection to server has been lost! Please refresh this page", true);
  }

  socket.onmessage = function (e) {
     var data = JSON.parse(e.data);
      if (data.type == "identity") {
        setIdentity(data.nick, data.ident, data.token);
      }
      if (data.type == "invalid") {
        alerted(data.content);
      } else {
        if (debug) console.log(data);
      }
     game.ports.downstream.send(e.data);
  }
}

// MAIN -------------------------------------------------------

joinToGame   = #{maybe Null (Number . fromIntegral) mgid};
loggedInNick = #{maybe Null String mauth};
nick         = localStorage.getItem("nick");
ident        = Number(localStorage.getItem("ident")); // Number(null) =  = 0
token        = localStorage.getItem("token");

if (token) { // join with cached creds
  startGame({ "type": "join", "nick" : nick, "ident": ident, "token": token
            , "game": joinToGame });
} else { // else go fetch token
  window.location.replace("@{AuthTokenR}" + window.location.search.replace("", ""));
}
