var game;
var debug; // set to true to debug events

var socket = new WebSocket("ws://84.248.82.156:8001");

var mainDiv = document.getElementById('game');
var waitDiv = document.getElementById('wait');
mainDiv.hidden = true;

window.onerror = function(msg, file, lineNr) {
   alert(msg + file + lineNr);
   game.destroy();
   return false;
}

function startGame(debugging) {
  if (debugging) {
    return Elm.debugFullscreen(Elm.Main, "Main.elm");
  } else {
    return Elm.embed(Elm.Main, mainDiv, { downstream : "" });
  }
}

loggedInNick = #{maybe Null String mauth};
nick         = localStorage.getItem("nick");
ident        = Number(localStorage.getItem("ident")); // Number(null) =  = 0
token        = localStorage.getItem("token");

function authenticate() {
  if (token) return joinCached();
  else  return joinFetching();
}

function joinCached() {
  return ({ "type": "join", "nick" : nick, "ident": ident, "token": token });
}

function joinFetching() {
  window.location.replace(window.location.search.replace("?", "@{AuthTokenR}?"));
}

doJoin = authenticate();

socket.onopen = function () {

  waitDiv.hidden = true;
  mainDiv.hidden = false;
  game = startGame();

  socket.onclose = function () {
    game.dispose();
    mainDiv.hidden    = true;
    waitDiv.hidden    = false;
    waitDiv.innerHTML = "Connection to server has been lost! Please refresh this page";
  }

  socket.onmessage = function (e) {
     var data = JSON.parse(e.data);

      if (data.type == "identity") {
          localStorage.setItem("nick", data.nick);
          localStorage.setItem("ident", data.ident);
          localStorage.setItem("auth-token", data.token);
          console.log("set my info to", data.nick, data.ident, data.token);
      }

      if (data.type == "invalid") {
        console.log(data);
      } else {
        if (debug) console.log(data);
      }

     game.ports.downstream.send(e.data);
  }

  game.ports.upstream.subscribe(function(e) {
    var d = JSON.parse(e);
    if (debug) console.log("out", d);
    if (d.type !== "noop") socket.send(e);
  });

  socket.send(JSON.stringify(doJoin));
}

